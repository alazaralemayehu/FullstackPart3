{"version":3,"sources":["services/Person.js","components/Person.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Person","person","name","number","Persons","persons","onDelete","map","onClick","Notification","message","className","Filter","value","onChange","PersonForm","onSubmit","newName","newNumber","onNumberChange","onNameChange","type","App","useState","setPersons","setNewName","setNewNumber","filterNameOption","setFilterNameOption","notificationMessage","setNotificationMessage","notifcationClass","setNotificationClass","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","returnedPerson","concat","setTimeout","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"6LACMA,EAAU,eAuBC,EArBF,WAEX,OADiBC,IAAMC,IAAIF,GACZG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EALM,SAACG,GAGlB,OAFgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,GAAM,IAElCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCpBzCK,EAAS,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACE,8BAAsBA,EAAOC,KAA7B,IAAoCD,EAAOE,SAAnCF,EAAOC,OAgBJE,EAbD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAC3B,OACA,6BACKD,EAAQE,KAAK,SAAAN,GAAM,OACpB,+BACI,cAAC,EAAD,CAAQA,OAAUA,IAClB,wBAAQO,QAAS,kBAAMF,EAASL,EAAOH,KAAvC,sBAFKG,EAAOH,UCNdW,EAAe,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UAC9B,OACE,mBAAGA,UAAWA,EAAd,SAA0BD,KAGxBE,EAAS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACtB,OAAQ,oDAAsB,uBAAOD,MAAOA,EAAOC,SAAUA,QAGzDC,EAAa,SAAC,GAAmE,IAAlEC,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aAClE,OAAS,uBAAMJ,SAAUA,EAAhB,UACN,yCACQ,uBAAOH,MAAOI,EAASH,SAAUM,IADzC,WAEU,uBAAOP,MAAOK,EAAWJ,SAAUK,OAE7C,8BACE,wBAAQE,KAAK,SAAb,uBA8GSC,EA1GH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTlB,EADS,KACAmB,EADA,OAGgBD,mBAAS,IAHzB,mBAGRN,EAHQ,KAGCQ,EAHD,OAIoBF,mBAAS,IAJ7B,mBAIRL,EAJQ,KAIGQ,EAJH,OAKiCH,mBAAS,IAL1C,mBAKRI,EALQ,KAKUC,EALV,OAMuCL,mBAAS,IANhD,mBAMRM,EANQ,KAMaC,EANb,OAOkCP,mBAAS,IAP3C,mBAORQ,EAPQ,KAOUC,EAPV,KAShBC,qBAAU,WACRC,IAEGzC,MAAM,SAAA0C,GACLX,EAAWW,QAEb,IAGJ,IAsEMC,EAAgBT,EAAiBtB,EAAQgC,QAAO,SAAApC,GAAM,OAAIA,EAAOC,KAAKoC,cAAcC,SAASZ,EAAiBW,kBAAgBjC,EAEpI,OACE,gCACE,cAAC,EAAD,CAAcK,QAAUmB,EAAqBlB,UAAWoB,IACxD,2CACA,cAAC,EAAD,CAAQlB,MAASc,EAAkBb,SApEF,SAAC0B,GACpCZ,EAAoBY,EAAMC,OAAO5B,UAoE/B,yCACA,cAAC,EAAD,CAAYG,SAxDE,SAACwB,GACjBA,EAAME,iBACiBrC,EAAQgC,QAAO,SAAApC,GAAM,OAAIA,EAAOC,OAASe,KAOhEiB,EALe,CACbhC,KAAMe,EACNd,OAAQe,IAKPzB,MAAK,SAAAkD,GAEJnB,EAAWnB,EAAQuC,OAAOD,IAE1B,IAAMd,EAAmB,gBAAYc,EAAezC,MAGpD8B,EAAqB,WACrBF,EAAuBD,GAEvBgB,YAAW,WAGTb,EAAqB,MACrBF,EAAuB,QACtB,KAEHL,EAAW,IACXC,EAAa,OACZoB,OAAM,SAAAC,GAGPf,EAAqB,SACrBF,EAAuBiB,EAAMrD,SAASC,KAAKoD,OAC3CC,QAAQC,IAAIpB,GAGZgB,YAAW,WACTb,EAAqB,MACrBF,EAAuB,QACtB,SAe4Bb,QAASA,EAASC,UAAWA,EAAWC,eA1EnD,SAACqB,GACzBd,EAAac,EAAMC,OAAO5B,QAyEqFO,aA9ExF,SAACoB,GACxBf,EAAWe,EAAMC,OAAO5B,UA+EtB,yCACA,cAAC,EAAD,CACER,QAAW+B,EACX9B,SAvEe,SAACR,GAEpBoC,EACgBpC,GACbL,MAAK,SAAAC,GACJ8B,EAAWnB,EAAQgC,QAAO,SAAApC,GAAM,OAAIA,EAAOH,KAAOA,MAClDkD,QAAQC,IAAI5C,a,MCxDpB6C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b850e3c2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request =  axios.get(baseUrl)\n    return request.then(response => response.data)\n  \n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const deletePerson = (id) => {\n      const request = axios.delete(`${baseUrl}/${id}`, [])\n      \n      return request.then(response => response.data)\n  }\n  export default { \n    getAll,\n    create,\n    update,\n    deletePerson\n  }","import React from 'react'\n\nconst Person = ({person}) => {\n    return (\n      <p key={person.name}>{person.name} {person.number}</p>\n    )\n  }\nconst Persons = ({persons, onDelete}) => {\nreturn (\n<ul>\n    {persons.map( person => \n    <li key={person.id}>\n        <Person person = {person}/>\n        <button onClick={() => onDelete(person.id)}>Delete</button>\n    </li>\n\n        )}\n</ul>)\n}\n\n  export default Persons","import React, { useState, useEffect } from 'react'\nimport personService from './services/Person'\nimport Persons from './components/Person'\n\n\nconst Notification = ({message, className}) => {\n  return(\n    <p className={className}>{message}</p>\n  ) \n}\nconst Filter = ({value, onChange}) => {\n  return (<p> Filter shown with <input value={value} onChange={onChange}/></p>)\n}\n\nconst PersonForm = ({onSubmit, newName, newNumber, onNumberChange, onNameChange} ) => {\n return ( <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={newName} onChange={onNameChange}/>\n      number: <input value={newNumber} onChange={onNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n</form>)\n}\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterNameOption, setFilterNameOption] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState('')\n  const [ notifcationClass, setNotificationClass] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then( initialPersons => {\n        setPersons(initialPersons)\n      })\n    },[])\n    \n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlNumberChange = (event)  => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilterOptionChange = (event) => {\n    setFilterNameOption(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n\n    personService\n      .deletePerson(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        console.log(persons)\n      })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personToUpdate = persons.filter(person => person.name === newName)\n  \n    const person = {\n      name: newName,\n      number: newNumber,\n    }\n    \n    personService\n      .create(person)\n      .then(returnedPerson => {\n\n        setPersons(persons.concat(returnedPerson))\n\n        const notificationMessage = `added ${returnedPerson.name}`\n        //set notification class to success and message to the crafted message\n        // class success is found in index.css \n        setNotificationClass('success')\n        setNotificationMessage(notificationMessage)\n       \n        setTimeout(() => {\n        // reset message and class of the notification after 5 seconds.\n\n          setNotificationClass(null)\n          setNotificationMessage(null)\n        }, 5000)\n\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        //set notification class to error and message to the crafted message\n        // class error is found in index.css \n        setNotificationClass('error')\n        setNotificationMessage(error.response.data.error)\n        console.log(notificationMessage)\n        \n        // reset message and class of the notification after 5 seconds.\n        setTimeout(() => {\n          setNotificationClass(null)\n          setNotificationMessage(null)\n        }, 5000)\n      })\n  }\n\n\n  // filter the persons to show \n  // if the filterSearch exists use that, if not use original persons object\n  const personsToShow = filterNameOption?persons.filter(person => person.name.toLowerCase().includes(filterNameOption.toLowerCase())):persons\n\n  return (\n    <div>\n      <Notification message ={notificationMessage} className={notifcationClass}/>\n      <h2>Phonebook</h2>\n      <Filter value = {filterNameOption} onChange= {handleNameFilterOptionChange}/>\n      <h3>Add New</h3>\n      <PersonForm onSubmit={addPerson} newName={newName} newNumber={newNumber} onNumberChange ={handlNumberChange} onNameChange={handleNameChange} />\n   \n      <h2>Numbers</h2>\n      <Persons \n        persons = {personsToShow}\n        onDelete = {deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}